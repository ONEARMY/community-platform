# Build docker container for development emulators
# Uses github container registry for caching and additional push to dockerhub for public use

# Secrets required:
# DOCKERHUB_USERNAME
# DOCKERHUB_TOKEN

name: Docker Emulator Build
on:
  push:
    branches:
      - master
    # Only create new build when seed data updates
    paths:
      - 'packages/emulators-docker/seed_data/**'

env:
  # Image name that will be added as suffix to either github repo owner or dockerhub username
  IMAGE_NAME: community-platform-emulator
jobs:
  build_and_preview:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login to github container registry and dockerhub
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Prepare image tags for future submission to both github container registry and dockerhub
      # Contains custom tagging strategy (currently prefix pp for precious-plastic and date)
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }},${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=2022-06-28
          # TODO - would be nice to extract tags based on seed data provided automatically or consider other strategies
          # https://github.com/docker/metadata-action#tags-input
          flavor: |
            latest=auto
            prefix=pp-

      # Prepare build
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Setup Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install npm dependencies
        run: yarn install --immutable
      - name: Set environment variables
        run: export REACT_APP_PROJECT_VERSION=${GITHUB_SHA}
      - name: Prepare Build
        run: yarn workspace oa-emulators-docker prepare

      # Build and deploy
      # This will use the tags generate to identify target destination, by default pushing to both
      # github container registery (used mostly for cahing as requires gh auth to pull locally) and
      # dockerhub (used publicy)
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: packages/emulators-docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}, mode=max
