"use strict";(self.webpackChunkoa_docs=self.webpackChunkoa_docs||[]).push([[188],{1095:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=n(4848),i=n(8453);const r={id:"overview",title:"Testing Overview"},o=void 0,a={id:"Testing/overview",title:"Testing Overview",description:"In the earlier stages of our platform when it consisted of a small number of modules and use cases, we relied on user testing and strict TypeScript typings. However, as the platform grew in complexity, we acknowledged the need for a more comprehensive testing strategy and first started introducing end-to-end (E2E) tests, focusing primarily on core modules like reading and creating how-tos, updating user profiles, etc. For E2E testing, we use Cypress, which has proven to be a valuable asset in our testing arsenal.",source:"@site/docs/Testing/overview.md",sourceDirName:"Testing",slug:"/Testing/overview",permalink:"/Testing/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/ONEARMY/community-platform/edit/master/packages/documentation/docs/Testing/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"Testing Overview"},sidebar:"mainSidebar",previous:{title:"Tests",permalink:"/Backend Development/tests"},next:{title:"E2E Testing",permalink:"/Testing/end-to-end"}},c={},l=[{value:"Running tests",id:"running-tests",level:2},{value:"Core application",id:"core-application",level:3},{value:"Components",id:"components",level:3},{value:"Functions",id:"functions",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"In the earlier stages of our platform when it consisted of a small number of modules and use cases, we relied on user testing and strict TypeScript typings. However, as the platform grew in complexity, we acknowledged the need for a more comprehensive testing strategy and first started introducing end-to-end (E2E) tests, focusing primarily on core modules like reading and creating how-tos, updating user profiles, etc. For E2E testing, we use Cypress, which has proven to be a valuable asset in our testing arsenal."}),"\n",(0,s.jsxs)(t.p,{children:["While this approach has served us well, we are continuously evolving our testing strategies to ensure the robustness of our platform. Recently, we've expanded our tools to adopt ",(0,s.jsx)(t.a,{href:"https://testing-library.com/",children:(0,s.jsx)(t.code,{children:"@testing-library"})})," so that we can continue to write tests which mimic user interactions but run significantly faster than the Cypress E2E test suites."]}),"\n",(0,s.jsx)(t.p,{children:"There are two specific aims of this approach:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Speed up local development workflows by providing fast feedback after changes have been made"}),"\n",(0,s.jsx)(t.li,{children:"Reduce the cost around introducing new tests so that it is easier for contributors to include tests as part of their changes."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"running-tests",children:"Running tests"}),"\n",(0,s.jsx)(t.h3,{id:"core-application",children:"Core application"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"yarn test:unit\n## Application e2e\nyarn test\n"})}),"\n",(0,s.jsx)(t.h3,{id:"components",children:"Components"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"yarn test\n"})}),"\n",(0,s.jsx)(t.h3,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"yarn test\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);