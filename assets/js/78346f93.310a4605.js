"use strict";(self.webpackChunkoa_docs=self.webpackChunkoa_docs||[]).push([[55],{718:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=n(4848),i=n(8453);const o={id:"tests",title:"Tests"},r=void 0,a={id:"Backend Development/tests",title:"Tests",description:"Backend tests are written with Jest and executed against a set of emulators for core services",source:"@site/docs/Backend Development/tests.md",sourceDirName:"Backend Development",slug:"/Backend Development/tests",permalink:"/Backend Development/tests",draft:!1,unlisted:!1,editUrl:"https://github.com/ONEARMY/community-platform/edit/master/packages/documentation/docs/Backend Development/tests.md",tags:[],version:"current",frontMatter:{id:"tests",title:"Tests"},sidebar:"mainSidebar",previous:{title:"Integrations",permalink:"/Backend Development/integrations"},next:{title:"Testing Overview",permalink:"/Testing/overview"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Running Locally",id:"running-locally",level:2},{value:"Writing Tests",id:"writing-tests",level:2},{value:"Utilities and Examples",id:"utilities-and-examples",level:2},{value:"Mocking Methods",id:"mocking-methods",level:3},{value:"Execute Functions Directly",id:"execute-functions-directly",level:3},{value:"Seed and Teardown Data",id:"seed-and-teardown-data",level:3},{value:"Production Data",id:"production-data",level:3}];function d(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Backend tests are written with ",(0,s.jsx)(t.a,{href:"https://jestjs.io/docs/getting-started",children:"Jest"})," and executed against a set of emulators for core services"]}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.p,{children:["You will need to support the running of ",(0,s.jsx)(t.a,{href:"https://firebase.google.com/docs/emulator-suite/install_and_configure#install_the_local_emulator_suite",children:"Firebase Emulators"})]}),"\n",(0,s.jsx)(t.h2,{id:"running-locally",children:"Running Locally"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"yarn workspace functions test:watch\n"})}),"\n",(0,s.jsx)(t.p,{children:"This will startup the firebase emulator suite, compile functions, and watch for any changes to function or spec test files"}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.mdxAdmonitionTitle,{}),(0,s.jsxs)(t.p,{children:["The emulator console can be viewed on ",(0,s.jsx)(t.a,{href:"http://localhost:4001",children:"localhost:4001"})]})]}),"\n",(0,s.jsx)(t.p,{children:"To run just a single test the interactive prompts can be used to provide a matching filename path, e.g."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"$ yarn workspace functions test:watch\n\n$ Watch Usage\n> Press p to filter by a filename regex pattern\n\n$ pattern \u203a mySpec\n\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This will automatically watch for changes to any files that match the regular expression ",(0,s.jsx)(t.code,{children:"/mySpec/"})]}),"\n",(0,s.jsx)(t.h2,{id:"writing-tests",children:"Writing Tests"}),"\n",(0,s.jsxs)(t.p,{children:["Tests are written in ",(0,s.jsx)(t.a,{href:"https://jestjs.io/docs/getting-started",children:"Jest"}),", with filenames ending ",(0,s.jsx)(t.code,{children:".spec.ts"})]}),"\n",(0,s.jsx)(t.h2,{id:"utilities-and-examples",children:"Utilities and Examples"}),"\n",(0,s.jsx)(t.h3,{id:"mocking-methods",children:"Mocking Methods"}),"\n",(0,s.jsx)(t.p,{children:"Mocks are a useful tool to reduce the number of additional services a test interacts with, making them more resilient to changes in the codebase."}),"\n",(0,s.jsxs)(t.p,{children:["There are various ways to achieve this, many of which are outlines in the Jest ",(0,s.jsx)(t.a,{href:"https://jestjs.io/docs/mock-functions",children:"Mock Functions"})," documentation"]}),"\n",(0,s.jsx)(t.p,{children:"A few methods commonly used in the codebase include:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Imports"}),"\nReturn a set of mock methods or utilities in place of an import. An example from the frontend code is when we want to avoid importing all stores, but instead just mock a single method"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"jest.mock('src/common/hooks/useCommonStores', () => {\n  return {\n    useCommonStores() {\n      return {\n        stores: {\n          userStore: {\n            fetchAllVerifiedUsers: jest.fn(),\n          },\n        },\n      }\n    },\n  }\n})\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Class Methods"}),"\nReplace specific class method with an alternative mock method. E.g. if the code relates to the active user, a mock stub could be used instead. An artificial example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import UserMethods from './userMethods'\n\nUserMethods.activeUser = jest.fn().mockReturnValue({ id: 'fake_user' })\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Replace or extend multiple class methods with mocks"}),"\nSimilarly, entire mock classes can be used where appropriate"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import UserMethods from './userMethods'\n\nclass MockUserMethods implements Partial<UserMethods>{\n  activeUser: () => jest.fn().mockReturnValue({ id: 'fake_user' })\n  setUser: () => jest.fn()\n}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"execute-functions-directly",children:"Execute Functions Directly"}),"\n",(0,s.jsxs)(t.p,{children:["It is possible to directly execute any function within the test environment without its required trigger.\nA utility ",(0,s.jsx)(t.code,{children:"FirebaseEmulatedTest"})," class is used to wrap the function invocation so that it can be used async, e.g."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"myFunction.ts"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import functions from 'firebase-functions'\n\nexports.default = functions.firestore\n  .document(`mockEndpoint/{id}`)\n  .onUpdate((change) => {\n    return doSomething(change)\n  })\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"myFunction.spec.ts"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { FirebaseEmulatedTest } from '../test/Firebase/emulator'\nimport myFunction from './myFunction.ts'\n\nconst beforeData = { field: 'initialValue' }\nconst afterData = { field: 'changedValue' }\n\nconst change = FirebaseEmulatedTest.mockFirestoreChangeObject(\n  beforeData,\n  afterData,\n  'mockEndpoint',\n  'mockDocId',\n)\n\nawait FirebaseEmulatedTest.run(myFunction, change)\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Additional utilities can also be used to provide a mock of the triggering context. In the example above a mock ",(0,s.jsx)(t.code,{children:"before"})," and ",(0,s.jsx)(t.code,{children:"after"})," data snapshot is created to mimic the firestore document change trigger used by the function"]}),"\n",(0,s.jsx)(t.h3,{id:"seed-and-teardown-data",children:"Seed and Teardown Data"}),"\n",(0,s.jsx)(t.p,{children:"The test utilities also have methods for seeding and clearing the Firestore DB if required for tests."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"myFunction.spec.ts"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"beforeEach(async () => {\n  await FirebaseEmulatedTest.seedFirestoreDB('users', [{ _id: 'user1 ' }])\n})\nafterEach(async () => {\n  await FirebaseEmulatedTest.clearFirestoreDB()\n})\n"})}),"\n",(0,s.jsx)(t.p,{children:"Additionally all emulator data will be cleared when scripts are terminated"}),"\n",(0,s.jsxs)(t.admonition,{type:"caution",children:[(0,s.jsx)(t.mdxAdmonitionTitle,{}),(0,s.jsxs)(t.p,{children:["If your test function interacts directly with an empty database endpoint it may throw an error",(0,s.jsx)(t.br,{}),"\n","(various issues on github, should review in the future)"]})]}),"\n",(0,s.jsx)(t.p,{children:"The easiest workaround is to seed the endpoint without any docs, which will allow the emulators to return an empty array from queries."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"await FirebaseEmulatedTest.seedFirestoreDB('empty_endpoint',[])\n"})}),"\n",(0,s.jsx)(t.h3,{id:"production-data",children:"Production Data"}),"\n",(0,s.jsx)(t.p,{children:"There may also be some cases where methods want to be tested against production data to check for any additional edge-cases or give a preview new feature development."}),"\n",(0,s.jsxs)(t.p,{children:["There currently isn't a single automated way to do this, however you can see an example of the manual steps involved in the ",(0,s.jsx)(t.code,{children:"test_functions"})," step of the ",(0,s.jsx)(t.a,{href:"https://github.com/ONEARMY/community-platform/blob/feat/aggregation-tests/.circleci/config.yml#L244-L245",children:"CircleCI pipeline"})]}),"\n",(0,s.jsxs)(t.p,{children:["Alternatively developers can follow the steps in ",(0,s.jsx)(t.a,{href:"/Backend%20Development/firebase-emulator",children:"Firebase Emulators Docker"})," to run the docker emulators locally and manually invoke functions"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);