import{j as o}from"./iframe-DcRPcggf.js";import{D as i}from"./DisplayMarkdown-pL8Cf8Fb.js";import"./DisplayMarkdownStylingWrapper-D0BdD97c.js";import"./theme-ui-components.esm-BmKkfoQf.js";import"./theme-ui-core-jsx-runtime.browser.esm-DMR0i_-_.js";const m={title:"Components/DisplayMarkdown",component:i},r="# h1 Heading 8-)\n\n## h2 Heading\n\n### h3 Heading\n\n#### h4 Heading\n\n##### h5 Heading\n\n###### h6 Heading\n\n## Horizontal Rules\n\n***\n\n***\n\n***\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n## Emphasis\n\n**This is bold text**\n\n**This is bold text**\n\n*This is italic text*\n\n*This is italic text*\n\n~~Strikethrough~~\n\n## Blockquotes\n\n> Blockquotes can also be nested...> ...by using additional greater-than signs right next to each other...> ...or with spaces between arrows.\n\n## Lists\n\nUnordered\n\n* Create a list by starting a line with '+', '-', or '*'\n* Sub-lists are made by indenting 2 spaces:\n  * Marker character change forces new list start:\n    * Nulla volutpat aliquam velit\n    - Facilisis in pretium nisl aliquet\n    * Ac tristique libero volutpat at\n* Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n4. You can use sequential numbers...\n\nStart numbering with offset:\n\n1. foo\n2. bar\n\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link [https://github.com/nodeca/pica](https://github.com/nodeca/pica) (enable linkify to see)\n",t=()=>o.jsx(i,{body:r});var e,s,a;t.__docgenInfo={description:"",methods:[],displayName:"Default"},t.parameters={...t.parameters,docs:{...null==(e=t.parameters)?void 0:e.docs,source:{originalSource:"() => <DisplayMarkdown body={markdown} />",...null==(a=null==(s=t.parameters)?void 0:s.docs)?void 0:a.source}}};const u=["Default"];export{t as Default,u as __namedExportsOrder,m as default};