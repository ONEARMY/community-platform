import{j as e}from"./jsx-runtime-CexXSJP5.js";import{F as r}from"./FieldTextarea-msSeWkcr.js";import"./index-BP8_t0zE.js";import"./CharacterCount-BGgvgJrP.js";import"./theme-ui-components.esm-DCiJ1mMX.js";import"./parseProps-780b287c.browser.esm-DiCerVr_.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-UWD3gXM2.js";import"./theme-ui-core-jsx-runtime.browser.esm-CH0qhC10.js";import"./hoist-non-react-statics.cjs-CQI8syxn.js";const D={title:"Forms/FieldTextarea",component:r},a=()=>e.jsx(r,{input:{},placeholder:"Text area input",meta:{}}),t=()=>e.jsx(r,{input:{},placeholder:"Text area input is not resizable",sx:{resize:"none"},meta:{error:"What an error",touched:!0}}),o=()=>e.jsx(r,{input:{},placeholder:"Text area input",meta:{error:"What an error",touched:!0}}),w=[{currentSize:5,minSize:0,maxSize:200,error:null},{currentSize:25,minSize:50,maxSize:200,error:"Character count must be a greater than 50 characters"},{currentSize:500,minSize:0,maxSize:100,error:"Character count must be a less than 100 characters"}],n=()=>e.jsx(e.Fragment,{children:w.map(((a,t)=>e.jsx(r,{input:{value:"Hello ".repeat(Math.round(a.currentSize/6))},placeholder:"Text area input",meta:{touched:!0},minLength:a.minSize,maxLength:a.maxSize,showCharacterCount:!0},t)))}),s=()=>e.jsx(r,{input:{},placeholder:"Text area input",meta:{},rows:10});var u,c,p,m,l,d,h,x,z,S,T,C,g,F,W;a.parameters={...a.parameters,docs:{...null==(u=a.parameters)?void 0:u.docs,source:{originalSource:'() => <FieldTextarea input={{} as any} placeholder="Text area input" meta={{}} />',...null==(p=null==(c=a.parameters)?void 0:c.docs)?void 0:p.source}}},t.parameters={...t.parameters,docs:{...null==(m=t.parameters)?void 0:m.docs,source:{originalSource:"() => <FieldTextarea input={{} as any} placeholder=\"Text area input is not resizable\" sx={{\n  resize: 'none'\n}} meta={{\n  error: 'What an error',\n  touched: true\n}} />",...null==(d=null==(l=t.parameters)?void 0:l.docs)?void 0:d.source}}},o.parameters={...o.parameters,docs:{...null==(h=o.parameters)?void 0:h.docs,source:{originalSource:"() => <FieldTextarea input={{} as any} placeholder=\"Text area input\" meta={{\n  error: 'What an error',\n  touched: true\n}} />",...null==(z=null==(x=o.parameters)?void 0:x.docs)?void 0:z.source}}},n.parameters={...n.parameters,docs:{...null==(S=n.parameters)?void 0:S.docs,source:{originalSource:"() => <>\n    {characterCountValues.map((state, index) => {\n    return <FieldTextarea key={index} input={{\n      value: 'Hello '.repeat(Math.round(state.currentSize / 6))\n    } as any} placeholder=\"Text area input\" meta={{\n      touched: true\n    }} minLength={state.minSize} maxLength={state.maxSize} showCharacterCount />;\n  })}\n  </>",...null==(C=null==(T=n.parameters)?void 0:T.docs)?void 0:C.source}}},s.parameters={...s.parameters,docs:{...null==(g=s.parameters)?void 0:g.docs,source:{originalSource:'() => <FieldTextarea input={{} as any} placeholder="Text area input" meta={{}} rows={10} />',...null==(W=null==(F=s.parameters)?void 0:F.docs)?void 0:W.source}}};const M=["Default","WithoutResizeHandle","WithError","WithCharacterCounts","CustomRowHeight"];export{s as CustomRowHeight,a as Default,n as WithCharacterCounts,o as WithError,t as WithoutResizeHandle,M as __namedExportsOrder,D as default};