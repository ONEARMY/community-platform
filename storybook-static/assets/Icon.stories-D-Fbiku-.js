import{j as e}from"./hoist-non-react-statics.cjs-CAIjOaGs.js";import{I as o,g as f}from"./Icon-BH7RxEvD.js";import{F as z}from"./theme-ui-components.esm-Dh60mSfC.js";import"./index-BP8_t0zE.js";import"./emotion-styled.browser.esm-Dz2BNYeh.js";import"./extends-CF3RwP-h.js";import"./parseProps-780b287c.browser.esm-DiCerVr_.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-UWD3gXM2.js";import"./contact-DD4r1-LP.js";import"./supporter-D7hp958O.js";import"./icon-arrow-down-CJeToCJe.js";import"./icon-star-active-ClN6U5FF.js";import"./theme-ui-core-jsx-runtime.browser.esm-e6Ek1sdh.js";const R={title:"Components/Icon",component:o},a=()=>e.jsx(o,{glyph:"delete"}),t=()=>e.jsx(e.Fragment,{children:["xl","lg","md","sm","xs"].map(((s,r)=>e.jsx(o,{glyph:"delete",size:s},r)))}),p=()=>e.jsx(z,{sx:{flexWrap:"wrap",gap:2},children:Object.keys(f).map(((s,r)=>e.jsx("a",{title:s,children:e.jsx(o,{glyph:s,size:30})},r)))}),c=()=>e.jsx(e.Fragment,{children:["#37ecba","#47d5b9","#57c1c5","#72afd3"].map(((s,r)=>e.jsx(o,{glyph:"delete",color:s,size:"lg"},r)))});var l,m,i,n,d,g,x,y,u,h,j,k;a.parameters={...a.parameters,docs:{...null==(l=a.parameters)?void 0:l.docs,source:{originalSource:'() => <Icon glyph="delete" />',...null==(i=null==(m=a.parameters)?void 0:m.docs)?void 0:i.source}}},t.parameters={...t.parameters,docs:{...null==(n=t.parameters)?void 0:n.docs,source:{originalSource:"() => <>\n    {['xl', 'lg', 'md', 'sm', 'xs'].map((size, key) => <Icon glyph=\"delete\" key={key} size={size} />)}\n  </>",...null==(g=null==(d=t.parameters)?void 0:d.docs)?void 0:g.source}}},p.parameters={...p.parameters,docs:{...null==(x=p.parameters)?void 0:x.docs,source:{originalSource:"() => <Flex sx={{\n  flexWrap: 'wrap',\n  gap: 2\n}}>\n    {Object.keys(glyphs).map((glyph: any, key) => <a key={key} title={glyph}>\n        <Icon glyph={glyph} size={30} />\n      </a>)}\n  </Flex>",...null==(u=null==(y=p.parameters)?void 0:y.docs)?void 0:u.source}}},c.parameters={...c.parameters,docs:{...null==(h=c.parameters)?void 0:h.docs,source:{originalSource:"() => <>\n    {['#37ecba', '#47d5b9', '#57c1c5', '#72afd3'].map((color, key) => <Icon glyph=\"delete\" key={key} color={color} size={'lg'} />)}\n  </>",...null==(k=null==(j=c.parameters)?void 0:j.docs)?void 0:k.source}}};const q=["Default","Sizes","Available","Colours"];export{p as Available,c as Colours,a as Default,t as Sizes,q as __namedExportsOrder,R as default};