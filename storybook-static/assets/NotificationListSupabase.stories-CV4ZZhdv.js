import{j as l}from"./hoist-non-react-statics.cjs-CAIjOaGs.js";import{b as p}from"./utils-BafZG6q3.js";import{N as t}from"./NotificationListSupabase-C7cUs8Au.js";import"./index-BP8_t0zE.js";import"./index-D_kXk1yT.js";import"./Button-6xtNGWM4.js";import"./Icon-BH7RxEvD.js";import"./emotion-styled.browser.esm-Dz2BNYeh.js";import"./extends-CF3RwP-h.js";import"./parseProps-780b287c.browser.esm-DiCerVr_.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-UWD3gXM2.js";import"./contact-DD4r1-LP.js";import"./supporter-D7hp958O.js";import"./icon-arrow-down-CJeToCJe.js";import"./icon-star-active-ClN6U5FF.js";import"./theme-ui-core-jsx-runtime.browser.esm-e6Ek1sdh.js";import"./theme-ui-components.esm-Dh60mSfC.js";import"./ButtonIcon-8E6bvWoh.js";import"./InternalLink-ObzMWfxM.js";import"./components-CyP20DXM.js";import"./index-BBRV8eG_.js";import"./index-CQ-1if_X.js";import"./Loader-B0RcsVXj.js";import"./emotion-react.browser.esm-CSvJcVfV.js";import"./theme-ui-core.browser.esm-CeK_aXfO.js";import"./cjs-C_eUj41b.js";import"./NotificationItemSupabase-uXfs_h9n.js";import"./DisplayDate-C0c9_euD.js";import"./typeof-QjJsDpFa.js";const J={title:"Components/NotificationListSupabase",component:t},d=p({isRead:!1}),c=p({isRead:!0}),o=()=>l.jsx(t,{isUpdatingNotifications:!1,markAllRead:()=>console.log("markAllRead"),markRead:()=>console.log("markRead"),modalDismiss:()=>console.log("modalDismiss"),notifications:[d,c]}),i=()=>l.jsx(t,{isUpdatingNotifications:!1,markAllRead:()=>console.log("markAllRead"),markRead:()=>console.log("markRead"),modalDismiss:()=>console.log("modalDismiss"),notifications:[c]});var a,s,e,m,r,n;o.parameters={...o.parameters,docs:{...null==(a=o.parameters)?void 0:a.docs,source:{originalSource:"() => <NotificationListSupabase isUpdatingNotifications={false} markAllRead={() => console.log('markAllRead')} markRead={() => console.log('markRead')} modalDismiss={() => console.log('modalDismiss')} notifications={[newsReplyNotification, questionCommentNotification]} />",...null==(e=null==(s=o.parameters)?void 0:s.docs)?void 0:e.source}}},i.parameters={...i.parameters,docs:{...null==(m=i.parameters)?void 0:m.docs,source:{originalSource:"() => <NotificationListSupabase isUpdatingNotifications={false} markAllRead={() => console.log('markAllRead')} markRead={() => console.log('markRead')} modalDismiss={() => console.log('modalDismiss')} notifications={[questionCommentNotification]} />",...null==(n=null==(r=i.parameters)?void 0:r.docs)?void 0:n.source}}};const K=["Default","NoNewNotifications"];export{o as Default,i as NoNewNotifications,K as __namedExportsOrder,J as default};