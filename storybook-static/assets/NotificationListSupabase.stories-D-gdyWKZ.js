import{j as l}from"./iframe-DhQQArsG.js";import{b as c}from"./utils-BCwJP_Xt.js";import{N as a}from"./NotificationListSupabase-C36xqem_.js";import"./index-D_kXk1yT.js";import"./Button-D5u6Xdb1.js";import"./Icon-C3CMUBxq.js";import"./emotion-styled.browser.esm-89IAnb7e.js";import"./extends-CF3RwP-h.js";import"./contact-DD4r1-LP.js";import"./supporter-D7hp958O.js";import"./icon-arrow-down-CJeToCJe.js";import"./icon-star-active-ClN6U5FF.js";import"./theme-ui-core-jsx-runtime.browser.esm-DrNiwHHo.js";import"./theme-ui-components.esm-CJjcQgzB.js";import"./ButtonIcon-jRwpFpGn.js";import"./InternalLink-5xiDfDkN.js";import"./Loader-BTPGqZsJ.js";import"./NotificationItemSupabase-ZIX5kEb1.js";import"./DisplayDate-7Nl0RC65.js";import"./typeof-QjJsDpFa.js";const E={title:"Components/NotificationListSupabase",component:a},d=c({isRead:!1}),p=c({isRead:!0}),o=()=>l.jsx(a,{isUpdatingNotifications:!1,markAllRead:()=>console.log("markAllRead"),markRead:()=>console.log("markRead"),modalDismiss:()=>console.log("modalDismiss"),notifications:[d,p]}),i=()=>l.jsx(a,{isUpdatingNotifications:!1,markAllRead:()=>console.log("markAllRead"),markRead:()=>console.log("markRead"),modalDismiss:()=>console.log("modalDismiss"),notifications:[p]});var s,t,e,m,r,n;o.__docgenInfo={description:"",methods:[],displayName:"Default"},i.__docgenInfo={description:"",methods:[],displayName:"NoNewNotifications"},o.parameters={...o.parameters,docs:{...null==(s=o.parameters)?void 0:s.docs,source:{originalSource:"() => <NotificationListSupabase isUpdatingNotifications={false} markAllRead={() => console.log('markAllRead')} markRead={() => console.log('markRead')} modalDismiss={() => console.log('modalDismiss')} notifications={[newsReplyNotification, questionCommentNotification]} />",...null==(e=null==(t=o.parameters)?void 0:t.docs)?void 0:e.source}}},i.parameters={...i.parameters,docs:{...null==(m=i.parameters)?void 0:m.docs,source:{originalSource:"() => <NotificationListSupabase isUpdatingNotifications={false} markAllRead={() => console.log('markAllRead')} markRead={() => console.log('markRead')} modalDismiss={() => console.log('modalDismiss')} notifications={[questionCommentNotification]} />",...null==(n=null==(r=i.parameters)?void 0:r.docs)?void 0:n.source}}};const I=["Default","NoNewNotifications"];export{o as Default,i as NoNewNotifications,I as __namedExportsOrder,E as default};