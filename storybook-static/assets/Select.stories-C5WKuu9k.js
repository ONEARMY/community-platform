import{j as t}from"./jsx-runtime-CexXSJP5.js";import{r as i}from"./index-BP8_t0zE.js";import{S as a}from"./Select-Do5Sykw4.js";import"./defineProperty-Dr9G4DxF.js";import"./typeof-QjJsDpFa.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./extends-CF3RwP-h.js";import"./setPrototypeOf-NYsvoNVB.js";import"./isNativeReflectConstruct-gwnEYaHE.js";import"./emotion-react.browser.esm-BYoRxRk_.js";import"./parseProps-780b287c.browser.esm-DiCerVr_.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-UWD3gXM2.js";import"./hoist-non-react-statics.cjs-CQI8syxn.js";import"./index-BBRV8eG_.js";import"./floating-ui.dom-D73o39gD.js";import"./icon-arrow-down-CJeToCJe.js";import"./theme-ui-components.esm-BngKL4Rx.js";import"./theme-ui-core-jsx-runtime.browser.esm-CH0qhC10.js";import"./theme-ui-core.browser.esm-CvTdiiil.js";import"./cjs-Clfm10Kj.js";const N={title:"Forms/Select",component:a},r=()=>t.jsx(a,{placeholder:"A placeholder value",options:[{value:"value-one",label:"Value 1"},{value:"value-two",label:"Value 2"}]}),o=()=>{const[e,l]=i.useState();return t.jsx(a,{value:e,onChange:l,placeholder:"A placeholder value",isClearable:!0,options:[{value:"value-one",label:"Value 1"},{value:"value-two",label:"Value 2"}]})},u=()=>{const[e,l]=i.useState({value:"value-three",label:"Value 3"});return t.jsx(a,{value:e,onChange:l,isMulti:!0,placeholder:"A placeholder value",options:[{value:"value-one",label:"Value 1"},{value:"value-two",label:"Value 2"},{value:"value-three",label:"Value 3"}]})},n=()=>{const[e,l]=i.useState();return t.jsx(a,{variant:"form",value:e,onChange:l,isMulti:!0,placeholder:"A placeholder value",options:[{value:"value-one",label:"Value 1"},{value:"value-two",label:"Value 2"}]})},s=()=>{const[e,l]=i.useState();return t.jsx(a,{variant:"icons",value:e,onChange:l,isMulti:!0,placeholder:"A placeholder value",options:[{label:"",options:[{imageElement:"",value:"verified",label:"Verified"}]},{label:"All Workspaces",options:[{imageElement:"",value:"verified",label:"Verified"}]},{label:"Others",options:[{imageElement:"",value:"verified",label:"Verified"}]}]})};var c,p,v,m,d,V,b,h,S,f,g,A,C,x,E;r.parameters={...r.parameters,docs:{...null==(c=r.parameters)?void 0:c.docs,source:{originalSource:"() => {\n  return <Select placeholder=\"A placeholder value\" options={[{\n    value: 'value-one',\n    label: 'Value 1'\n  }, {\n    value: 'value-two',\n    label: 'Value 2'\n  }]} />;\n}",...null==(v=null==(p=r.parameters)?void 0:p.docs)?void 0:v.source}}},o.parameters={...o.parameters,docs:{...null==(m=o.parameters)?void 0:m.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState();\n  return <Select value={value} onChange={setValue} placeholder=\"A placeholder value\" isClearable={true} options={[{\n    value: 'value-one',\n    label: 'Value 1'\n  }, {\n    value: 'value-two',\n    label: 'Value 2'\n  }]} />;\n}",...null==(V=null==(d=o.parameters)?void 0:d.docs)?void 0:V.source}}},u.parameters={...u.parameters,docs:{...null==(b=u.parameters)?void 0:b.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState({\n    value: 'value-three',\n    label: 'Value 3'\n  });\n  return <Select value={value} onChange={setValue} isMulti={true} placeholder=\"A placeholder value\" options={[{\n    value: 'value-one',\n    label: 'Value 1'\n  }, {\n    value: 'value-two',\n    label: 'Value 2'\n  }, {\n    value: 'value-three',\n    label: 'Value 3'\n  }]} />;\n}",...null==(S=null==(h=u.parameters)?void 0:h.docs)?void 0:S.source}}},n.parameters={...n.parameters,docs:{...null==(f=n.parameters)?void 0:f.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState();\n  return <Select variant=\"form\" value={value} onChange={setValue} isMulti={true} placeholder=\"A placeholder value\" options={[{\n    value: 'value-one',\n    label: 'Value 1'\n  }, {\n    value: 'value-two',\n    label: 'Value 2'\n  }]} />;\n}",...null==(A=null==(g=n.parameters)?void 0:g.docs)?void 0:A.source}}},s.parameters={...s.parameters,docs:{...null==(C=s.parameters)?void 0:C.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState();\n  return <Select variant=\"icons\" value={value} onChange={setValue} isMulti={true} placeholder=\"A placeholder value\" options={[{\n    label: '',\n    options: [{\n      imageElement: '',\n      value: 'verified',\n      label: 'Verified'\n    }]\n  }, {\n    label: 'All Workspaces',\n    options: [{\n      imageElement: '',\n      value: 'verified',\n      label: 'Verified'\n    }]\n  }, {\n    label: 'Others',\n    options: [{\n      imageElement: '',\n      value: 'verified',\n      label: 'Verified'\n    }]\n  }]} />;\n}",...null==(E=null==(x=s.parameters)?void 0:x.docs)?void 0:E.source}}};const P=["Default","Clearable","MultipleSelect","FormSelect","SelectWithIcons"];export{o as Clearable,r as Default,n as FormSelect,u as MultipleSelect,s as SelectWithIcons,P as __namedExportsOrder,N as default};