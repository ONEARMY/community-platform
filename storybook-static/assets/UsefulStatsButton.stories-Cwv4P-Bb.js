import{j as l,r}from"./iframe-sdBLW9v8.js";import{U as u}from"./UsefulStatsButton-BzB7Vlcy.js";import"./Button-C6dBjqwc.js";import"./Icon-B_3Iokjd.js";import"./emotion-styled.browser.esm-DRO5FxP4.js";import"./extends-CF3RwP-h.js";import"./contact-DD4r1-LP.js";import"./flag-unknown-BwNbunrQ.js";import"./icon-arrow-down-CJeToCJe.js";import"./icon-star-active-ClN6U5FF.js";import"./theme-ui-core-jsx-runtime.browser.esm-C8_ySpVA.js";import"./theme-ui-components.esm-CqB0JU78.js";import"./Tooltip-BNIk-MzN.js";import"./react-tooltip.min-DUCFfQQX.js";import"./floating-ui.dom-CMrPtIsz.js";import"./index-D0LbUThr.js";const N={title:"Components/UsefulStatsButton",component:u},o=()=>l.jsx(u,{isLoggedIn:!1,hasUserVotedUseful:!1,votedUsefulCount:99,onUsefulClick:()=>Promise.resolve()}),s=()=>{const[e,o]=r.useState(99),[t,s]=r.useState(!1);return l.jsx(u,{votedUsefulCount:e,hasUserVotedUseful:t,isLoggedIn:!0,onUsefulClick:async()=>{await new Promise((e=>setTimeout((()=>e()),2e3))),o((e=>t?e-1:e+1)),s((e=>!e))}})},n=()=>{const[e,o]=r.useState(100),[t,s]=r.useState(!0);return l.jsx(u,{votedUsefulCount:e,hasUserVotedUseful:t,isLoggedIn:!0,onUsefulClick:async()=>{await new Promise((e=>setTimeout((()=>e()),2e3))),o((e=>t?e-1:e+1)),s((e=>!e))}})};var m,p,f,U,g,v,C,V,S;o.__docgenInfo={description:"",methods:[],displayName:"LoggedOutWithCount"},s.__docgenInfo={description:"",methods:[],displayName:"LoggedInWithCount"},n.__docgenInfo={description:"",methods:[],displayName:"CurrentUserHasVoted"},o.parameters={...o.parameters,docs:{...null==(m=o.parameters)?void 0:m.docs,source:{originalSource:"() => <UsefulStatsButton isLoggedIn={false} hasUserVotedUseful={false} votedUsefulCount={99} onUsefulClick={() => Promise.resolve()} />",...null==(f=null==(p=o.parameters)?void 0:p.docs)?void 0:f.source}}},s.parameters={...s.parameters,docs:{...null==(U=s.parameters)?void 0:U.docs,source:{originalSource:"() => {\n  const [count, setCount] = useState<number>(99);\n  const [voted, setVoted] = useState(false);\n  const clickVote = async () => {\n    await new Promise<void>(resolve => setTimeout(() => resolve(), 2000));\n    setCount(val => voted ? val - 1 : val + 1);\n    setVoted(val => !val);\n  };\n  return <UsefulStatsButton votedUsefulCount={count} hasUserVotedUseful={voted} isLoggedIn={true} onUsefulClick={clickVote} />;\n}",...null==(v=null==(g=s.parameters)?void 0:g.docs)?void 0:v.source}}},n.parameters={...n.parameters,docs:{...null==(C=n.parameters)?void 0:C.docs,source:{originalSource:"() => {\n  const [count, setCount] = useState<number>(100);\n  const [voted, setVoted] = useState(true);\n  const clickVote = async () => {\n    await new Promise<void>(resolve => setTimeout(() => resolve(), 2000));\n    setCount(val => voted ? val - 1 : val + 1);\n    setVoted(val => !val);\n  };\n  return <UsefulStatsButton votedUsefulCount={count} hasUserVotedUseful={voted} isLoggedIn={true} onUsefulClick={clickVote} />;\n}",...null==(S=null==(V=n.parameters)?void 0:V.docs)?void 0:S.source}}};const b=["LoggedOutWithCount","LoggedInWithCount","CurrentUserHasVoted"];export{n as CurrentUserHasVoted,s as LoggedInWithCount,o as LoggedOutWithCount,b as __namedExportsOrder,N as default};