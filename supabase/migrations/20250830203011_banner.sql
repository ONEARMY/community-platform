create table "public"."banners" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "modified_at" timestamp with time zone,
    "text" text not null,
    "url" text,
    "tenant_id" text not null
);


alter table "public"."banners" enable row level security;

CREATE UNIQUE INDEX banner_pkey ON public.banners USING btree (id);

alter table "public"."banners" add constraint "banner_pkey" PRIMARY KEY using index "banner_pkey";

grant delete on table "public"."banners" to "anon";

grant insert on table "public"."banners" to "anon";

grant references on table "public"."banners" to "anon";

grant select on table "public"."banners" to "anon";

grant trigger on table "public"."banners" to "anon";

grant truncate on table "public"."banners" to "anon";

grant update on table "public"."banners" to "anon";

grant delete on table "public"."banners" to "authenticated";

grant insert on table "public"."banners" to "authenticated";

grant references on table "public"."banners" to "authenticated";

grant select on table "public"."banners" to "authenticated";

grant trigger on table "public"."banners" to "authenticated";

grant truncate on table "public"."banners" to "authenticated";

grant update on table "public"."banners" to "authenticated";

grant delete on table "public"."banners" to "service_role";

grant insert on table "public"."banners" to "service_role";

grant references on table "public"."banners" to "service_role";

grant select on table "public"."banners" to "service_role";

grant trigger on table "public"."banners" to "service_role";

grant truncate on table "public"."banners" to "service_role";

grant update on table "public"."banners" to "service_role";

create policy "tenant_isolation"
on "public"."banners"
as permissive
for all
to public
using ((tenant_id = ( SELECT ((current_setting('request.headers'::text, true))::json ->> 'x-tenant-id'::text))));
