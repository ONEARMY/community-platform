CREATE TABLE IF NOT EXISTS "public"."map_pins" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "profile_id" bigint NOT NULL,
    "country" "text" NOT NULL,
    "country_code" "text" NOT NULL,
    "administrative" "text",
    "post_code" "text",
    "lat" "text" NOT NULL,
    "lng" "text" NOT NULL,
    "moderation" "text" NOT NULL,
    "tenant_id" "text" NOT NULL,
    "moderation_feedback" "text",
    "name" "text"
);

CREATE TABLE IF NOT EXISTS "public"."map_settings" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "default_type_filters" "text"[],
    "setting_filters" "text"[] NOT NULL,
    "tenant_id" "text" NOT NULL
);

CREATE INDEX "idx_map_pins_moderation" ON "public"."map_pins" USING "btree" ("moderation");
CREATE INDEX "idx_map_pins_moderation_tenant" ON "public"."map_pins" USING "btree" ("moderation", "tenant_id");
CREATE INDEX "idx_map_pins_tenant_id" ON "public"."map_pins" USING "btree" ("tenant_id");
CREATE INDEX "map_pins_lat_lng_idx" ON "public"."map_pins" USING "btree" ("lat", "lng");
CREATE INDEX "map_pins_user_id_idx" ON "public"."map_pins" USING "btree" ("profile_id");

ALTER TABLE ONLY "public"."map_pins"
    ADD CONSTRAINT "map_pins_user_id_fkey" FOREIGN KEY ("profile_id") REFERENCES "public"."profiles"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "public"."map_pins" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."map_settings" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "tenant_isolation" ON "public"."map_pins" USING (("tenant_id" = (("current_setting"('request.headers'::"text", true))::"json" ->> 'x-tenant-id'::"text")));
CREATE POLICY "tenant_isolation" ON "public"."map_settings" USING (("tenant_id" = (("current_setting"('request.headers'::"text", true))::"json" ->> 'x-tenant-id'::"text")));
